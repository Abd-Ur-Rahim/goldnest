/* src/app/settings/SettingsPage.module.css */

/* Container for the whole settings area (sidebar + content) */
.settings {
    display: flex;
    min-height: calc(100vh - 56px - 150px); /* Adjust based on actual nav/footer */
    padding: 20px 0; /* Adjust padding as needed within the main layout */
    gap: 20px;
    flex-direction: column; /* Stack on mobile */
}

@media (min-width: 768px) {
    .settings {
        flex-direction: row; /* Side by side on larger screens */
    }
}

/* Sidebar Styling */
.sidebar {
    width: 100%; /* Full width on mobile */
    flex-shrink: 0; /* Prevent shrinking */
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    padding: 15px;
    height: fit-content; /* Only as tall as needed */
}

@media (min-width: 768px) {
    .sidebar {
        width: 200px; /* Fixed width on larger screens */
    }
}

/* Basic list styling reset */
.sidebar ul {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex; /* Horizontal on mobile */
    flex-wrap: wrap; /* Allow wrapping */
    gap: 5px; /* Small gap on mobile */
}
@media (min-width: 768px) {
     .sidebar ul {
         flex-direction: column; /* Vertical on larger screens */
         gap: 0; /* Reset gap */
     }
     .sidebar li {
        margin-bottom: 5px; /* Space between items vertically */
     }
}


/* Sidebar Link Styling */
.sidebarLink { /* Use a consistent class name */
    text-decoration: none;
    color: #666;
    font-size: 0.85rem; /* Slightly smaller */
    font-weight: 500;
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 8px 10px;
    border-radius: 5px;
    transition: background-color 0.2s ease, color 0.2s ease;
    cursor: pointer; /* Make it clear it's clickable */
    border: none; /* Reset button default border */
    background: none; /* Reset button background */
    width: 100%; /* Ensure button takes full width */
    text-align: left;
}

.sidebarLink i { /* Icon styling */
    width: 16px; /* Fixed width for alignment */
    text-align: center;
    color: #999;
    transition: color 0.2s ease;
}

.sidebarLinkActive { /* Style for the active link */
    background-color: #F8B612;
    color: #fff;
}
.sidebarLinkActive i { /* Icon color for active link */
    color: #fff;
}

.sidebarLink:hover { /* Hover effect */
    background-color: #f9f9f9;
    color: #333;
}
.sidebarLink:hover i {
    color: #F8B612;
}
.sidebarLinkActive:hover { /* Hover effect for active link */
     background-color: #e0a810; /* Darker yellow */
     color: #fff;
}
.sidebarLinkActive:hover i {
    color: #fff;
}


/* Main Content Area Styling */
.settingsContent { /* Renamed from settings-content */
    flex: 1; /* Take remaining space */
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    padding: 25px; /* More padding */
}

.settingsContent h2 {
    font-size: 1.3rem; /* Larger title */
    font-weight: 600;
    color: #333;
    margin-bottom: 10px;
    padding-bottom: 10px;
    border-bottom: 1px solid #eee;
}

.lastUpdated { /* Renamed from last-updated */
    font-size: 0.7rem;
    color: #999;
    margin-bottom: 25px; /* More space below title */
    display: block; /* Ensure it's on its own line */
}

/* Tab Content display handled by React state, not CSS classes */

/* Profile Picture Section */
.profilePic {
    display: flex;
    align-items: center;
    gap: 20px; /* More gap */
    margin-bottom: 25px;
}

/* Assuming profilePic img styles are handled by Next Image component */

.profilePic input[type="file"] { display: none; }

.profilePic label { /* Style for the "Change Picture" button */
    background-color: #F8B612;
    color: #fff;
    padding: 8px 15px;
    border-radius: 5px;
    cursor: pointer;
    font-size: 0.8rem;
    font-weight: 500;
    transition: background-color 0.3s ease;
    display: inline-block; /* Make it like a button */
}
.profilePic label:hover { background-color: #e0a00e; }

/* Form Group Styling */
.formGroup { /* Renamed */
    margin-bottom: 18px; /* More spacing */
    position: relative;
}
.formGroup label {
    display: block;
    font-size: 0.85rem; /* Slightly smaller label */
    font-weight: 500;
    color: #555; /* Darker label */
    margin-bottom: 6px;
}
/* Assuming input/select styles are handled by global .input-field or similar */
.formGroup input:disabled,
.formGroup select:disabled {
    background-color: #e9ecef !important; /* Ensure override */
    cursor: not-allowed;
    opacity: 0.7;
}
.formGroup small {
    display: block;
    font-size: 0.75rem;
    color: #888; /* Lighter help text */
    margin-top: 6px;
}

/* Action Buttons Container */
.actionButtons { /* Renamed */
    display: flex;
    gap: 10px;
    margin-top: 25px;
    padding-top: 15px;
    border-top: 1px solid #eee;
}
/* Assuming .btnPrimary, .btnSecondary styles are global */
/* Add .btnDanger if not global */
.btnDanger {
    background-color: #dc3545;
    color: #fff;
    padding: 10px 20px;
    border-radius: 20px; /* Match other buttons */
    font-weight: 500;
    font-size: 0.9rem;
    border: none;
    cursor: pointer;
    transition: background-color 0.3s ease;
}
.btnDanger:hover { background-color: #c82333; }


/* Security Specific */
.securityOptions { /* Renamed */
    display: flex;
    flex-direction: column;
    gap: 15px;
    margin-top: 10px; /* Space above options */
}
.securityOptions label {
    display: flex;
    align-items: center;
    gap: 10px; /* More gap */
    font-size: 0.9rem;
    color: #333;
    cursor: pointer; /* Make whole label clickable */
}
.securityOptions input[type="checkbox"] {
     height: 1.1em; /* Make checkbox slightly larger */
     width: 1.1em;
     accent-color: #F8B612; /* Color the check */
}

/* Help Specific */
.helpLinks { /* Renamed */
    display: flex;
    flex-direction: column;
    gap: 12px; /* More spacing */
}
.helpLinks a {
    color: #F8B612;
    text-decoration: none;
    font-size: 0.9rem;
}
.helpLinks a:hover { text-decoration: underline; }

/* Preferences Specific */
.preferencesGroup { /* Wrapper for preference sections */
    margin-bottom: 20px;
}
.preferencesGroup h4 { /* Sub-heading for Notifications/Currency */
    font-size: 1rem;
    font-weight: 600;
    margin-bottom: 10px;
    color: #444;
}
.preferencesGroup label {
     display: flex; /* Use flex for checkbox labels too */
     align-items: center;
     gap: 10px;
     font-size: 0.9rem;
     color: #333;
     margin-bottom: 8px; /* Space between checkboxes */
}
.preferencesGroup input[type="checkbox"] {
     height: 1.1em;
     width: 1.1em;
     accent-color: #F8B612;
}

/* Success Popup Styles */
.successPopup { /* Renamed */
    /* Styles copied from internal-styles are likely fine */
    display: none; /* Controlled by React state */
    position: fixed;
    /* ... rest of popup styles ... */
}
/* Dark mode styles (add these if implementing theme toggle) */
:global(body.dark) .sidebar { background-color: #2a2a2a; }
:global(body.dark) .sidebarLink { color: #bbb; }
:global(body.dark) .sidebarLinkActive { background-color: #F8B612; color: #1a1a1a; } /* Adjust active dark */
:global(body.dark) .sidebarLinkActive i { color: #1a1a1a; }
:global(body.dark) .sidebarLink:hover { background-color: #3a3a3a; color: #ddd; }
:global(body.dark) .sidebarLink:hover i { color: #F8B612; }
:global(body.dark) .sidebarLinkActive:hover { background-color: #e0a810; color: #1a1a1a;}

:global(body.dark) .settingsContent { background-color: #2a2a2a; }
:global(body.dark) .settingsContent h2 { color: #ddd; }
:global(body.dark) .lastUpdated { color: #777; }
:global(body.dark) .profilePic img { border-color: #555; }
:global(body.dark) .formGroup label { color: #bbb; }
:global(body.dark) .formGroup input,
:global(body.dark) .formGroup select,
:global(body.dark) .formGroup textarea { background-color: #3a3a3a; color: #ddd; border-color: #555; }
:global(body.dark) .formGroup small { color: #777; }
:global(body.dark) .securityOptions label { color: #ddd; }
:global(body.dark) .preferencesGroup label { color: #ddd; }
:global(body.dark) .preferencesGroup h4 { color: #ccc; }
:global(body.dark) .successPopup { background-color: #2a2a2a; }
:global(body.dark) .successPopup p { color: #ddd; }
/* --- End CSS Module --- */